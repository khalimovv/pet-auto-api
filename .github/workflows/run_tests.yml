name: Automated tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target (leave empty to run all tests)
        required: false
        type: choice
        default: ""
        options:
          - ""
          - first_test
          - second_test

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Run pytest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # пригодится для корректной истории

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Run selected or full test suite (with Allure)
        run: |
          mkdir -p allure-results
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.deployment_target }}" = "first_test" ]; then
            echo "Running: first_test"
            pytest tests/test_get_single_user.py::TestGetSingleUser::test_get_single_user --alluredir=allure-results
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.deployment_target }}" = "second_test" ]; then
            echo "Running: second_test"
            pytest tests/test_get_single_user.py::TestGetSingleUser::test_get_single_user --alluredir=allure-results
          else
            echo "Running: full test suite"
            pytest --alluredir=allure-results
          fi

      - name: Upload allure results artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 7

  generate-report:
    name: Generate Allure report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Setup Java (required by Allure)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Allure CLI
        run: |
          ALLURE_VERSION=2.32.0
          wget -q https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          sudo tar -zxf allure-${ALLURE_VERSION}.tgz -C /opt/
          sudo ln -sf /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure
          allure --version

      - name: Download allure-results from tests job
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Checkout gh-pages for history (if exists)
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 1
          persist-credentials: false

      - name: Reuse Allure history
        run: |
          if [ -d gh-pages/history ]; then
            echo "Copying previous history..."
            mkdir -p allure-results/history
            cp -R gh-pages/history/* allure-results/history/ || true
          else
            echo "No previous history found."
          fi

      - name: Generate report to _site
        run: |
          rm -rf _site
          allure generate -c allure-results -o _site
          test -d _site && echo "Allure report generated."

      - name: Upload built site artifact
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 7

  publish-report:
    name: Publish report to GitHub Pages
    runs-on: ubuntu-latest
    needs: generate-report
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

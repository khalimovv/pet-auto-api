name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        type: choice
        default: first_test
        options:
          - first_test
          - second_test

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
      # 3.12 сейчас стабильнее в CI, но если хочешь 3.13 — оставь "3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Run tests (first_test)
        if: "github.event.inputs.deployment_target == 'first_test'"
        run: pytest tests/test_get_single_user.py::TestGetSingleUser::test_get_single_user --alluredir=allure-results

      - name: Run tests (second_test)
        if: "github.event.inputs.deployment_target == 'second_test'"
        run: pytest tests/test_get_single_user.py::TestGetSingleUser::test_get_single_user --alluredir=allure-results

      - name: Upload allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 7

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report

    steps:
      - name: Setup Java (required by Allure)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.32.0
          wget -q https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          sudo tar -zxf allure-${ALLURE_VERSION}.tgz -C /opt/
          sudo ln -sf /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure
          allure --version

      - name: Download allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate report to _site
        run: |
          rm -rf _site
          allure generate -c allure-results -o _site
          test -d _site && echo "Allure report generated."

      - name: Upload built site
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 7

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
